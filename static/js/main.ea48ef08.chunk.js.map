{"version":3,"sources":["Creator.js","Picross.js","App.js","serviceWorker.js","index.js"],"names":["Creator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","preventDefault","target","value","name","setState","defineProperty","handleSubmit","_this$state","state","height","width","console","log","createMatrix","x","y","matrix","i","push","Array","parseInt","fill","_this$drawNumbers","drawNumbers","_this$drawNumbers2","slicedToArray","rows","columns","num","forEach","row","calculateNumbers","map","col","reduce","accumulator","current","length","snib","filter","Number","handleClick","param","_param","ii","_this$state2","classList","_this$drawNumbers3","_this$drawNumbers4","_this2","_this$state3","max_width","acc","e","col_style","concat","form","react_default","a","createElement","type","onChange","label","onClick","className","style","key","el","ee","JSON","stringify","React","Component","Picross","lives","curr","example","r","src_Creator","App","src_Picross","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mRA6KeA,cA1Kb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACdC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAWFI,aAAe,SAACC,GACdA,EAAMC,iBACN,IAAMC,EAASF,EAAME,OACfC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KAEpBZ,EAAKa,SAALZ,OAAAa,EAAA,EAAAb,CAAA,GACGW,EAAOD,KAnBIX,EAuBhBe,aAAe,SAACP,GACdA,EAAMC,iBADkB,IAAAO,EAEEhB,EAAKiB,MAAvBC,EAFgBF,EAEhBE,OAAQC,EAFQH,EAERG,MACZD,EAAS,GAAKC,EAAQ,GAAKD,EAAS,IAAMC,EAAQ,KACpDC,QAAQC,IAAIF,EAAOD,GACnBlB,EAAKsB,aAAaH,EAAOD,IAG3BE,QAAQC,IAAIF,EAAOD,IA/BLlB,EAmChBsB,aAAe,SAACC,EAAEC,GAEd,IADF,IAAIC,EAAS,GACFC,EAAI,EAAGA,EAAIF,EAAGE,IACrBD,EAAOE,KAAKC,MAAMC,SAASN,EAAE,KAAKO,KAAK,IAGzC9B,EAAKa,SAAS,CAAEY,WAChB,IAPoBM,EASE/B,EAAKgC,YAAYP,EAAQ,GAT3BQ,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAA8B,EAAA,GASfI,EATeF,EAAA,GASTG,EATSH,EAAA,GAUpBb,QAAQC,IAAIc,EAAMC,GAClBpC,EAAKa,SAAS,CAAEY,SAAQY,IAJd,EAImBF,OAAMC,aA9CvBpC,EAkDdgC,YAAc,SAACP,EAAQY,GAEvB,IAAIF,EAAO,GACPC,EAAU,GAYd,OAXAX,EAAOa,QAAQ,SAAAC,GACbnB,QAAQC,IAAIrB,EAAKwC,iBAAiBD,EAAKF,IACvCF,EAAKR,KAAK3B,EAAKwC,iBAAiBD,EAAKF,MAIzBZ,EAAO,GAAGgB,IAAI,SAACC,EAAKhB,GAAN,OAAYD,EAAOgB,IAAI,SAAAF,GAAG,OAAIA,EAAIb,OACtDY,QAAQ,SAAAC,GAChBH,EAAQT,KAAK3B,EAAKwC,iBAAiBD,EAAKF,MAGjC,CAACF,EAAMC,IAjEApC,EAqEdwC,iBAAmB,SAACD,EAAKF,GAuBzB,OAtBaE,EAAII,OAAO,SAACC,EAAaC,GACpC,GAAIA,IAAYR,GAEd,GAA2B,IAAvBO,EAAYE,OACdF,EAAYjB,KAAKE,SAAS,EAAE,UAEvB,GAAIe,EAAYE,OAAS,EAAG,CACjC,IAAIC,EAAQH,EAAYA,EAAYE,OAAO,GAAKjB,SAAS,EAAG,IAC5De,EAAYA,EAAYE,OAAO,GAAKjB,SAASkB,EAAM,UAGjDH,EAAYE,OAAS,GACrBF,EAAYjB,KAAK,IAGrB,OAAOiB,GACR,IAGkBI,OAAOC,SAzFdjD,EA+FhBkD,YAAc,SAACC,GAAD,OAAW,SAAC3C,GAAU,IAAA4C,EAAAnD,OAAAiC,EAAA,EAAAjC,CACrBkD,EADqB,GAC7BzB,EAD6B0B,EAAA,GAC3BC,EAD2BD,EAAA,GAElC5C,EAAMC,iBAF4B,IAAA6C,EAIZtD,EAAKiB,MAArBQ,EAJ4B6B,EAI5B7B,OAAQY,EAJoBiB,EAIpBjB,IACQ,IAAlBZ,EAAOC,GAAG2B,IACZ5B,EAAOC,GAAG2B,GAAMhB,EAChB7B,EAAME,OAAO6C,UAAY,cAEzB9B,EAAOC,GAAG2B,GAAM,EAChB7C,EAAME,OAAO6C,UAAY,YAVO,IAAAC,EAcZxD,EAAKgC,YAAYP,EAAQY,GAdboB,EAAAxD,OAAAiC,EAAA,EAAAjC,CAAAuD,EAAA,GAc7BrB,EAd6BsB,EAAA,GAcvBrB,EAduBqB,EAAA,GAelCzD,EAAKa,SAAS,CAAEY,SAAQU,OAAMC,cA5G9BpC,EAAKiB,MAAQ,CACXQ,OAAQ,GACRP,OAAQ,EACRC,MAAO,EACPiB,QAAS,GACTD,KAAM,GACNE,IAAK,GAROrC,wEAmHP,IAAA0D,EAAAvD,KAAAwD,EACyBxD,KAAKc,MAA/BQ,EADCkC,EACDlC,OAAQW,EADPuB,EACOvB,QAASD,EADhBwB,EACgBxB,KAInByB,EAAY,GAAGzB,EAAKQ,OAFT,SAACkB,EAAKC,GAAN,OAAYA,EAAEhB,OAASe,EAAMA,EAAMC,EAAEhB,OAASe,GAErB,GAKpCE,EAAY,CAAE5C,MAAK,GAAA6C,OAAKJ,EAAL,OAEnBK,EACJC,EAAAC,EAAAC,cAAA,4CACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qBAEAF,EAAAC,EAAAC,cAAA,SAAOC,KAAK,SAASzD,KAAK,QAAQ0D,SAAUnE,KAAKI,eACjD2D,EAAAC,EAAAC,cAAA,SAAOC,KAAK,SAASzD,KAAK,SAAS0D,SAAUnE,KAAKI,gBAElD2D,EAAAC,EAAAC,cAAA,UAAQC,KAAK,SAASE,MAAM,SAASC,QAASrE,KAAKY,iBAKvD,OAAIU,EAAOqB,OAAS,EACVmB,EAIRC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WAAWC,MAAOX,IAC/B3B,EAAQK,IAAI,SAACqB,EAAEpC,GAAH,OACZwC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cAAcE,IAAG,MAAAX,OAAQtC,IAAMoC,EAAErB,IAAI,SAACmC,EAAGvB,GAAJ,OAAWa,EAAAC,EAAAC,cAAA,OAAKK,UAAU,MAAME,IAAG,GAAAX,OAAKtC,GAALsC,OAASX,IAAOuB,SAG1GzC,EAAKM,IAAI,SAACqB,EAAGpC,GAAJ,OACRwC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YAAYE,IAAKjD,GAC9BwC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBAAgBC,MAAOX,GACpCG,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eAAeX,EAAErB,IAAI,SAACmC,EAAGvB,GAAJ,OAAWa,EAAAC,EAAAC,cAAA,QAAMO,IAAG,GAAAX,OAAKtC,GAALsC,OAASX,IAAOuB,OAEzEnD,EAAOC,GAAGe,IAAI,SAACoC,EAAGxB,GAAJ,OACba,EAAAC,EAAAC,cAAA,OAAKO,IAAG,UAAAX,OAAYtC,GAAZsC,OAAgBX,GAAMoB,UAAU,WAAWD,QAASd,EAAKR,YAAY,CAACxB,EAAE2B,WAMxFa,EAAAC,EAAAC,cAAA,oBACCU,KAAKC,UAAUtD,WAtKEuD,IAAMC,WC4JbC,cA1Jb,SAAAA,IAAc,IAAAlF,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+E,IACZlF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiF,GAAA5E,KAAAH,QAkCF6B,YAAc,SAACP,EAAQY,GAErB,IAAIF,EAAO,GACPC,EAAU,GAYd,OAXAX,EAAOa,QAAQ,SAAAC,GACbnB,QAAQC,IAAIrB,EAAKwC,iBAAiBD,EAAKF,IACvCF,EAAKR,KAAK3B,EAAKwC,iBAAiBD,EAAKF,MAIzBZ,EAAO,GAAGgB,IAAI,SAACC,EAAKhB,GAAN,OAAYD,EAAOgB,IAAI,SAAAF,GAAG,OAAIA,EAAIb,OACtDY,QAAQ,SAAAC,GACfH,EAAQT,KAAK3B,EAAKwC,iBAAiBD,EAAKF,MAGlC,CAACF,EAAMC,IAlDFpC,EAsDdwC,iBAAmB,SAACD,EAAKF,GAuBvB,OAtBaE,EAAII,OAAO,SAACC,EAAaC,GACpC,GAAIA,IAAYR,GAEd,GAA2B,IAAvBO,EAAYE,OACdF,EAAYjB,KAAKE,SAAS,EAAE,UAEvB,GAAIe,EAAYE,OAAS,EAAG,CACjC,IAAIC,EAAQH,EAAYA,EAAYE,OAAO,GAAKjB,SAAS,EAAG,IAC5De,EAAYA,EAAYE,OAAO,GAAKjB,SAASkB,EAAM,UAGjDH,EAAYE,OAAS,GACrBF,EAAYjB,KAAK,IAGrB,OAAOiB,GACR,IAGkBI,OAAOC,SA1EhBjD,EAgFdkD,YAAc,SAACC,GAAD,OAAW,SAAC3C,GACxBY,QAAQC,IAAI,QADsB,IAAA+B,EAAAnD,OAAAiC,EAAA,EAAAjC,CAEpBkD,EAFoB,GAE7BzB,EAF6B0B,EAAA,GAE1BC,EAF0BD,EAAA,GAGlC5C,EAAMC,iBAH4B,IAAAO,EAIXhB,EAAKiB,MAApBQ,EAJ0BT,EAI1BS,OAAOY,EAJmBrB,EAInBqB,IAJmBiB,EAKZtD,EAAKiB,MAArBkE,EAL4B7B,EAK5B6B,MAAOC,EALqB9B,EAKrB8B,KAKT3D,EAAOC,GAAG2B,KAAQhB,GACpB7B,EAAME,OAAO6C,UAAY,YAGzB6B,EAAK1D,GAAG2B,GAAMhB,EACVyC,KAAKC,UAAUtD,KAAYqD,KAAKC,UAAUK,GAC5ChE,QAAQC,IAAI,WAEZrB,EAAKa,SAAS,CAAEuE,WAIlBD,GAAc,EACd3E,EAAME,OAAO6C,UAAY,YACX,IAAV4B,GACF/D,QAAQC,IAAI,aAEdrB,EAAKa,SAAS,CAAEsE,aAzGlBnF,EAAKiB,MAAQ,CACXQ,OAAQ,GACR2D,KAAM,GACNjD,KAAM,GACNC,QAAS,GACTiD,QAAS,GACThD,KAAM,EACN8C,MAAO,GATGnF,mFAoBZ,IAAIqxiBD,EAAOC,EAAQ5C,IAAI,SAAA6C,GAAC,MAAI,GAAGtB,OAAOsB,GAAGxD,KAAK,KAC9CV,QAAQC,IAAI+D,GAGZhE,QAAQC,IAAI,WACZD,QAAQC,IAAIgE,GAfM,IAAAtD,EAgBI5B,KAAK6B,YAAYqD,EAH7B,GAbQpD,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAA8B,EAAA,GAgBbI,EAhBaF,EAAA,GAgBPG,EAhBOH,EAAA,GAiBlBb,QAAQC,IAAIc,EAAMC,GAClBjC,KAAKU,SAAS,CAAEY,OAAQ4D,EAAShD,IALvB,EAK4BF,OAAMC,UAASgD,0CAkF9C,IAAA1B,EAAAvD,KAAAwD,EACkCxD,KAAKc,MAAtCQ,EADDkC,EACClC,OAAQU,EADTwB,EACSxB,KAAMC,EADfuB,EACevB,QAAS+C,EADxBxB,EACwBwB,MAG3BvB,EAAY,GAAGzB,EAAKQ,OAFT,SAACkB,EAAKC,GAAN,OAAYA,EAAEhB,OAASe,EAAMA,EAAMC,EAAEhB,OAASe,GAErB,GACpCE,EAAY,CAAE5C,MAAK,GAAA6C,OAAKJ,EAAL,OAEvB,OACAM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,2BAA2BC,MAAOX,IAC9C3B,EAAQK,IAAI,SAACqB,EAAEpC,GAAH,OACXwC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cAAcE,IAAG,MAAAX,OAAQtC,IAAMoC,EAAErB,IAAI,SAACmC,EAAGvB,GAAJ,OAAWa,EAAAC,EAAAC,cAAA,OAAKK,UAAU,MAAME,IAAG,GAAAX,OAAKtC,GAALsC,OAASX,IAAOuB,SAG5GzC,EAAKM,IAAI,SAACqB,EAAGpC,GAAJ,OACRwC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YAAYE,IAAKjD,GAC9BwC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBAAgBC,MAAOX,GACpCG,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eAAeX,EAAErB,IAAI,SAACmC,EAAGvB,GAAJ,OAAWa,EAAAC,EAAAC,cAAA,QAAMO,IAAG,GAAAX,OAAKtC,GAALsC,OAASX,IAAOuB,OAEzEnD,EAAOC,GAAGe,IAAI,SAACoC,EAAGxB,GAAJ,OACba,EAAAC,EAAAC,cAAA,OAAKO,IAAG,UAAAX,OAAYtC,GAAZsC,OAAgBX,GAAMoB,UAAU,WAAWD,QAASd,EAAKR,YAAY,CAACxB,EAAE2B,WAKtFa,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAnBF,eAoBee,EACbjB,EAAAC,EAAAC,cAAA,WArBF,qBAsBoBF,EAAAC,EAAAC,cAAA,WACjB3C,EACDyC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACmB,EAAD,cArJgBP,IAAMC,WCWbO,mLARX,OACEtB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAACqB,EAAD,cAJUR,aCQES,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9B,EAAAC,EAAAC,cAAC6B,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ea48ef08.chunk.js","sourcesContent":["import React from 'react';\n\nclass Creator extends React.Component {  \n  constructor() {\n  super();\n  this.state = {\n    matrix: [],\n    height: 1,\n    width: 1,\n    columns: [],\n    rows: [],\n    num: 1,\n  }\n}\n\nhandleChange = (event) => {\n  event.preventDefault();\n  const target = event.target;\n  const value = target.value;\n  const name = target.name;\n\n  this.setState({\n    [name]: value\n  });\n}\n\nhandleSubmit = (event) => {\n  event.preventDefault();\n  const { height, width } = this.state;\n  if (height > 0 && width > 0 && height < 50 && width < 50) {\n    console.log(width, height)\n    this.createMatrix(width, height);\n  }\n\n  console.log(width, height)\n}\n\n// Create a zero matrix from the height and width:\ncreateMatrix = (x,y) => {\n  let matrix = [];\n    for (let i = 0; i < y; i++) {\n      matrix.push(Array(parseInt(x,10)).fill(0));\n    }\n\n    this.setState({ matrix });\n    let num = 1;\n    \n    let [rows, columns] = this.drawNumbers(matrix, 1);\n    console.log(rows, columns);\n    this.setState({ matrix, num, rows, columns }); \n  }\n\n  // Create the arrays of number rows used for solving the puzzle\n  drawNumbers = (matrix, num) => {\n  // Do columns\n  let rows = [];\n  let columns = [];\n  matrix.forEach(row => {\n    console.log(this.calculateNumbers(row, num))\n    rows.push(this.calculateNumbers(row, num));\n  });\n\n  // Transpose the matrix to get the columns: \n  let matrix2 = matrix[0].map((col, i) => matrix.map(row => row[i]));\n  matrix2.forEach(row => {\n  columns.push(this.calculateNumbers(row, num));\n  });\n\n  return [rows, columns];\n  }\n\n  // Calculate the array of numbers needed for solving one row\n  calculateNumbers = (row, num) => {\n  let result = row.reduce((accumulator, current) => {\n    if (current === num) {\n      // If it's the first element, add 1:\n      if (accumulator.length === 0) {\n        accumulator.push(parseInt(1,10));\n      // If it's element after first, add +1 to the previous \n      } else if (accumulator.length > 0) {\n        let snib =  accumulator[accumulator.length-1] + parseInt(1, 10);\n        accumulator[accumulator.length-1] = parseInt(snib, 10);\n      }\n    } else {\n      if (accumulator.length > 0) {\n          accumulator.push([])\n      }\n    }\n      return accumulator;\n  }, []);\n\n  // Remove empty lists from results\n  let result2 = result.filter(Number);\n\n  // console.log(\"result\", result2);\n  return result2;\n}\n\nhandleClick = (param) => (event) => {\n  let [i,ii] = param;\n  event.preventDefault();\n\n  let { matrix, num } = this.state;\n  if (matrix[i][ii] === 0) {\n    matrix[i][ii] = num;\n    event.target.classList = \"box black\";\n  } else {\n    matrix[i][ii] = 0;\n    event.target.classList = \"box boxi\";\n  }\n  \n\n  let [rows, columns] = this.drawNumbers(matrix, num);\n  this.setState({ matrix, rows, columns });\n}\n\n\n\nrender() {\n  let { matrix, columns, rows } = this.state;\n\n  let reducer = ((acc, e) => e.length > acc ? acc = e.length : acc );\n  // Calculate the rows and columns:\n  let max_width = 10*rows.reduce(reducer, 0);\n  // if (max_width === 0) {\n  //   max_width = 10;\n  // }\n\n  let col_style = { width: `${max_width}px` }\n\n  let form = (    \n  <div>Enter the size of the picross:\n    <form>\n      <label>\n      Name:\n      <input type=\"number\" name=\"width\" onChange={this.handleChange}/>\n      <input type=\"number\" name=\"height\" onChange={this.handleChange}/>\n      </label>\n      <button type=\"button\" label=\"Create\" onClick={this.handleSubmit} />\n    </form>\n  </div>)\n\n\n  if (matrix.length < 1) {\n    return (form)\n  }\n\n  return(\n    <div>\n      <div className=\"container\">\n        <div className=\"box box0\" style={col_style}></div>\n         {columns.map((e,i) => (\n          <div className=\"box box-col\" key={`col${i}`}>{e.map((el,ii) => <div className=\"num\" key={`${i}${ii}`}>{el}</div>)}</div>\n        ))}\n      </div>\n      {rows.map((e, i) => (\n        <div className=\"container\" key={i}>\n          <div className=\"row-container\" style={col_style}>\n            <div className=\"box box-row\">{e.map((el,ii) => <span key={`${i}${ii}`}>{el}</span>)}</div>\n          </div>\n          {matrix[i].map((ee,ii) => (\n            <div key={`unique ${i}${ii}`} className=\"box boxi\" onClick={this.handleClick([i,ii])}></div>\n            ))}\n        </div>\n      ))}\n\n\n    <p>Matrix:</p>\n    {JSON.stringify(matrix)}      \n    </div>\n  )}\n}\n\nexport default Creator","import React from 'react';\nimport Creator from './Creator';\n\nclass Picross extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      matrix: [],\n      curr: [],\n      rows: [],\n      columns: [],\n      example: [],\n      num: -1,\n      lives: 3,\n    }\n  }\n\n  componentDidMount() {\n    // Create example picross for testing:\n    //let example = math.matrix([[1,1,1],[0,1,0],[0,1,0]]);\n    //let example = [[1,1],[1,0],[0,0],[0,0]];\n    //let example = [[0,0,0],[0,0,1]]\n    //let example = [[1,0,1,0,1],[1,1,1,1,1],[1,0,1,1,1],[0,0,1,0,0],[1,1,0,0,1]]\n    //let example = [[1,0,1,0,1,0,1,0,1,0,1,0,1,0,1],[0,0,0,1,0,1,0,1,0,0,0,0,0,0,0],[1,0,1,0,1,0,0,1,0,0,0,0,0,0,0],[0,1,1,0,1,0,1,0,0,0,0,0,0,0,0],[1,0,1,0,1,0,1,0,0,0,0,0,0,0,0],[0,0,1,0,1,0,1,1,1,1,1,0,0,0,0],[1,0,1,0,1,0,1,1,0,0,0,1,0,0,0],[0,0,1,0,1,1,0,0,0,1,0,0,1,0,0],[1,0,1,1,0,0,0,0,1,0,1,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,1,1,0,0,0],[1,0,0,0,0,0,0,0,1,1,0,0,1,0,0],[0,1,0,0,0,0,0,0,0,0,0,0,1,0,0],[1,0,1,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,1,1,0,0,0,0,1,1,0,0,0,0],[1,0,0,0,0,1,1,1,1,0,0,0,0,0,0]]\n    let example = [[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1]];\n    // Create zero matrix for comparison: \n    //let curr = Array.from(example, Array.from(x => x = 0))\n    let curr = example.map(r => [].concat(r).fill(0));\n    console.log(curr)\n\n    let num = 1;\n    console.log('example')\n    console.log(example);\n    let [rows, columns] = this.drawNumbers(example, num);\n    console.log(rows, columns);\n    this.setState({ matrix: example, num, rows, columns, curr }); \n  }\n\n  // Create the arrays of number rows used for solving the puzzle\n  drawNumbers = (matrix, num) => {\n    // Do columns\n    let rows = [];\n    let columns = [];\n    matrix.forEach(row => {\n      console.log(this.calculateNumbers(row, num))\n      rows.push(this.calculateNumbers(row, num));\n    });\n\n    // Transpose the matrix to get the columns: \n    let matrix2 = matrix[0].map((col, i) => matrix.map(row => row[i]));\n    matrix2.forEach(row => {\n     columns.push(this.calculateNumbers(row, num));\n    });\n\n    return [rows, columns];\n  }\n\n  // Calculate the array of numbers needed for solving one row\n  calculateNumbers = (row, num) => {\n    let result = row.reduce((accumulator, current) => {\n      if (current === num) {\n        // If it's the first element, add 1:\n        if (accumulator.length === 0) {\n          accumulator.push(parseInt(1,10));\n        // If it's element after first, add +1 to the previous \n        } else if (accumulator.length > 0) {\n          let snib =  accumulator[accumulator.length-1] + parseInt(1, 10);\n          accumulator[accumulator.length-1] = parseInt(snib, 10);\n        }\n      } else {\n        if (accumulator.length > 0) {\n            accumulator.push([])\n        }\n      }\n        return accumulator;\n    }, []);\n\n    // Remove empty lists from results\n    let result2 = result.filter(Number);\n\n    // console.log(\"result\", result2);\n    return result2;\n  }\n\n  handleClick = (param) => (event) => {\n    console.log(\"klik\")\n    let [i, ii] = param;\n    event.preventDefault();\n    const { matrix,num } = this.state;\n    let { lives, curr } = this.state;\n\n    //Handle left click: \n\n    // Handle right click: \n    if (matrix[i][ii] === num) {\n      event.target.classList = \"box black\";\n\n      //check game end condition\n      curr[i][ii] = num;\n      if (JSON.stringify(matrix) === JSON.stringify(curr)) {\n        console.log(\"You won\");\n      } else {\n        this.setState({ curr });\n      }\n    } else {\n      // Do something to show what went wrong\n      lives = lives-1;\n      event.target.classList = \"box cross\";\n      if (lives === 0) {\n        console.log(\"game over\");\n      }\n      this.setState({ lives });\n    }\n  }\n\n\n\n  render() {\n    const { matrix, rows, columns, lives } = this.state;\n    let reducer = ((acc, e) => e.length > acc ? acc = e.length : acc );\n    // Calculate the rows and columns:\n    let max_width = 10*rows.reduce(reducer, 0);\n    let col_style = { width: `${max_width}px` };\n\n    return(\n    <div>\n      <div className=\"container\">\n        <div className=\"box box0 box-col box-row\" style={col_style}></div>\n          {columns.map((e,i) => (\n            <div className=\"box box-col\" key={`col${i}`}>{e.map((el,ii) => <div className=\"num\" key={`${i}${ii}`}>{el}</div>)}</div>\n            ))}\n      </div>\n      {rows.map((e, i) => (\n        <div className=\"container\" key={i}>\n          <div className=\"row-container\" style={col_style}>\n            <div className=\"box box-row\">{e.map((el,ii) => <span key={`${i}${ii}`}>{el}</span>)}</div>\n          </div>\n          {matrix[i].map((ee,ii) => (\n            <div key={`unique ${i}${ii}`} className=\"box boxi\" onClick={this.handleClick([i,ii])}></div>\n          ))}\n        </div>\n      ))}\n\n      <br />\n      <br />\n      Lives left: {lives}\n      <br />\n      Matrix should be: <br />\n      {matrix}\n      <br />\n      <br />\n\n      <Creator />\n      </div>\n    )\n  }\n}\n\nexport default Picross","import React, { Component } from 'react';\nimport './App.css';\nimport Picross from './Picross'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Picross />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}